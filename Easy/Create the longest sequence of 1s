# Given some bitstring b, you may change one bit from a 0 to a 1 in order to create the longest possible sequence of consecutive 1s. 
# Output the length of the resulting longest sequence.
# Example: 11011101111
# Flipping the second 0 results in 11011111111, where the longest sequence of 1s is 8 long.

def check_max():
    global count_1, max_len
    if count_1 > max_len:
        max_len = count_1
    count_1 = 0


b = list(input())

count_1 = 0
max_len = 0
index = 0
a = []

for i in range(len(b)):
    if b[i] == "0":
        a.append(i)
        
for i in a:
    b[i] = "1"
    for j in range(len(b)):
        if b[j] == "1":
            count_1 += 1
            if j == len(b) - 1:
                check_max()
        elif b[j] == "0":
            check_max()
    b[i] = "0"
    
print(max_len)
